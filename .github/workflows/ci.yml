name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    # Python setup
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov pylint black mypy safety bandit

    - name: Run Python tests
      run: |
        cd backend
        pytest --cov=app --cov-report=xml
        black --check app tests
        pylint app tests
        mypy app
        bandit -r app

    # Node.js setup
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test
        npm run lint
        npm run type-check

    # Security scanning
    - name: Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Healthcare IVR Platform'
        path: '.'
        format: 'HTML'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7
          --enableRetired

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    # Upload test results
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml,./frontend/coverage/lcov.info

    # Notify on failure
    - name: Notify on failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: '#FF0000'
        SLACK_MESSAGE: 'CI pipeline failed!'
        SLACK_TITLE: CI Failure Notification 