"""add_additional_tables_and_columns

Revision ID: 40606d3453b9
Revises: 
Create Date: 2025-05-27 16:40:09.093529+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40606d3453b9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sku', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=False),
    sa.Column('min_stock_level', sa.Integer(), nullable=False),
    sa.Column('max_stock_level', sa.Integer(), nullable=False),
    sa.Column('reorder_point', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('item_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('settings', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('security_policy', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('conditions', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('sku', sa.String(length=50), nullable=False),
    sa.Column('hcpcs_code', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('product_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('facilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('facility_type', sa.String(length=50), nullable=False),
    sa.Column('npi', sa.String(length=10), nullable=False),
    sa.Column('address_line1', sa.String(length=255), nullable=False),
    sa.Column('address_line2', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('fax', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('npi')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('parent_role_id', sa.UUID(), nullable=True),
    sa.Column('permissions', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['parent_role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warehouse_locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('type', sa.Enum('shelf', 'bin', 'rack', 'zone', 'aisle', name='location_type'), nullable=False),
    sa.Column('parent_location_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['parent_location_id'], ['warehouse_locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('inventory_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('addition', 'removal', 'transfer', 'adjustment', name='transaction_type'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reference_id', sa.UUID(), nullable=True),
    sa.Column('reference_type', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['warehouse_locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_levels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('condition', sa.Enum('new', 'used', 'damaged', 'expired', name='stock_condition'), nullable=False),
    sa.Column('last_counted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['warehouse_locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('encrypted_password', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=32), nullable=True),
    sa.Column('force_password_change', sa.Boolean(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('report_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compliance_checks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('check_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('results', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('npi', sa.String(length=10), nullable=False),
    sa.Column('tax_id', sa.String(length=10), nullable=False, comment='ENCRYPTED'),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('fax', sa.String(length=20), nullable=True),
    sa.Column('address_line1', sa.String(length=255), nullable=False),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=True),
    sa.Column('accepting_new_patients', sa.Boolean(), nullable=False),
    sa.Column('insurance_networks', sa.Text(), nullable=True),
    sa.Column('office_hours', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('tax_id')
    )
    op.create_index(op.f('ix_providers_name'), 'providers', ['name'], unique=False)
    op.create_index(op.f('ix_providers_npi'), 'providers', ['npi'], unique=True)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('granted_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('sensitive_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('encrypted_data', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('encryption_key_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('encrypted_first_name', sa.LargeBinary(), nullable=False),
    sa.Column('encrypted_last_name', sa.LargeBinary(), nullable=False),
    sa.Column('encrypted_dob', sa.LargeBinary(), nullable=False),
    sa.Column('encrypted_ssn', sa.LargeBinary(), nullable=True),
    sa.Column('encrypted_phone', sa.LargeBinary(), nullable=True),
    sa.Column('encrypted_email', sa.LargeBinary(), nullable=True),
    sa.Column('encrypted_address', sa.LargeBinary(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('patient_metadata', sa.JSON(), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('facility_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('provider_credentials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('credential_type', sa.String(length=100), nullable=False, comment='License, Certificate, etc.'),
    sa.Column('credential_number', sa.String(length=100), nullable=False, comment='ENCRYPTED'),
    sa.Column('issuing_authority', sa.String(length=200), nullable=False),
    sa.Column('issue_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('document_key', sa.String(length=255), nullable=True, comment='S3 key for stored document'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider_relationships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('related_provider_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.ForeignKeyConstraint(['related_provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('facility_id', sa.UUID(), nullable=False),
    sa.Column('service_type', sa.String(length=100), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='ivrpriority'), nullable=False),
    sa.Column('status', sa.Enum('SUBMITTED', 'IN_REVIEW', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'ESCALATED', 'CANCELLED', name='ivrstatus'), nullable=False),
    sa.Column('current_reviewer_id', sa.UUID(), nullable=True),
    sa.Column('request_metadata', sa.JSON(), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['current_reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('insurance_data', sa.JSON(), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('ivr_session_id', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('pending', 'verified', 'approved', 'processing', 'completed', 'cancelled', name='order_status_enum'), nullable=False),
    sa.Column('order_type', sa.Enum('prescription', 'medical_equipment', 'lab_test', 'referral', name='order_type_enum'), nullable=False),
    sa.Column('priority', sa.Enum('routine', 'urgent', 'emergency', name='order_priority_enum'), nullable=False),
    sa.Column('_total_amount', sa.String(length=500), nullable=False),
    sa.Column('_notes', sa.Text(), nullable=False),
    sa.Column('_insurance_data', sa.String(length=2000), nullable=False),
    sa.Column('_payment_info', sa.String(length=2000), nullable=False),
    sa.Column('_delivery_info', sa.String(length=2000), nullable=False),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_number')
    )
    op.create_table('patient_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('document_category', sa.String(length=50), nullable=False),
    sa.Column('document_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phi_access_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('updated_by_id', sa.UUID(), nullable=True),
    sa.Column('access_type', sa.String(length=50), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('accessed_fields', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('ip_address', sa.String(length=50), nullable=False),
    sa.Column('user_agent', sa.String(length=500), nullable=False),
    sa.Column('request_id', sa.String(length=100), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('secondary_insurance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('insurance_provider', sa.String(length=100), nullable=False),
    sa.Column('insurance_id', sa.String(length=100), nullable=False),
    sa.Column('insurance_group', sa.String(length=100), nullable=True),
    sa.Column('insurance_phone', sa.String(length=20), nullable=True),
    sa.Column('coverage_start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('coverage_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=False),
    sa.Column('verification_data', sa.JSON(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fulfillment_orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'picking', 'quality_check', 'shipping', 'completed', 'cancelled', name='fulfillment_status'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'normal', 'high', 'urgent', name='fulfillment_priority'), nullable=False),
    sa.Column('items', sa.JSON(), nullable=False),
    sa.Column('shipping_info', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_approvals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ivr_request_id', sa.UUID(), nullable=False),
    sa.Column('approver_id', sa.UUID(), nullable=False),
    sa.Column('approval_level', sa.Integer(), nullable=False),
    sa.Column('decision', sa.String(length=20), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ivr_request_id'], ['ivr_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ivr_request_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('document_key', sa.String(length=255), nullable=False),
    sa.Column('uploaded_by_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('verification_notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['ivr_request_id'], ['ivr_requests.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_escalations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ivr_request_id', sa.UUID(), nullable=False),
    sa.Column('escalated_by_id', sa.UUID(), nullable=False),
    sa.Column('escalated_to_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=False),
    sa.Column('resolved', sa.String(length=10), nullable=False),
    sa.Column('resolution_notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['escalated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['escalated_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ivr_request_id'], ['ivr_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ivr_request_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['ivr_request_id'], ['ivr_requests.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_session_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('insurance_coverage', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['ivr_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ivr_status_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ivr_request_id', sa.UUID(), nullable=False),
    sa.Column('from_status', sa.Enum('SUBMITTED', 'IN_REVIEW', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'ESCALATED', 'CANCELLED', name='ivrstatus'), nullable=True),
    sa.Column('to_status', sa.Enum('SUBMITTED', 'IN_REVIEW', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'ESCALATED', 'CANCELLED', name='ivrstatus'), nullable=False),
    sa.Column('changed_by_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ivr_request_id'], ['ivr_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_status_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('from_status', sa.Enum('pending', 'verified', 'approved', 'processing', 'completed', 'cancelled', name='order_status_enum'), nullable=True),
    sa.Column('to_status', sa.Enum('pending', 'verified', 'approved', 'processing', 'completed', 'cancelled', name='order_status_enum'), nullable=False),
    sa.Column('changed_by_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('return_authorizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('condition', sa.Enum('new', 'used', 'damaged', 'expired', name='return_condition'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'received', 'completed', name='return_status'), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('service_type', sa.Enum('GROUND', 'EXPRESS', 'OVERNIGHT', 'PRIORITY', 'ECONOMY', name='shippingservicetype'), nullable=False),
    sa.Column('carrier_id', sa.String(length=100), nullable=False),
    sa.Column('tracking_number', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CREATED', 'PICKUP', 'IN_TRANSIT', 'OUT_FOR_DELIVERY', 'DELIVERED', 'EXCEPTION', 'UNKNOWN', name='trackingstatus'), nullable=False),
    sa.Column('label_url', sa.String(length=500), nullable=False),
    sa.Column('shipping_cost', sa.String(length=500), nullable=False),
    sa.Column('insurance_cost', sa.String(length=500), nullable=False),
    sa.Column('shipment_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_addresses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('address_type', sa.Enum('from', 'to', name='address_type_enum'), nullable=False),
    sa.Column('_street1', sa.String(length=500), nullable=False),
    sa.Column('_street2', sa.String(length=500), nullable=False),
    sa.Column('_city', sa.String(length=500), nullable=False),
    sa.Column('_state', sa.String(length=500), nullable=False),
    sa.Column('_zip_code', sa.String(length=500), nullable=False),
    sa.Column('_country', sa.String(length=500), nullable=False),
    sa.Column('_phone', sa.String(length=500), nullable=False),
    sa.Column('_email', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picking_lists',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('fulfillment_order_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'cancelled', name='picking_status'), nullable=False),
    sa.Column('picker_id', sa.UUID(), nullable=True),
    sa.Column('items', sa.JSON(), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['fulfillment_order_id'], ['fulfillment_orders.id'], ),
    sa.ForeignKeyConstraint(['picker_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quality_checks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('fulfillment_order_id', sa.UUID(), nullable=False),
    sa.Column('inspector_id', sa.UUID(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'passed', 'failed', name='quality_check_status'), nullable=False),
    sa.Column('items_checked', sa.JSON(), nullable=False),
    sa.Column('issues_found', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['fulfillment_order_id'], ['fulfillment_orders.id'], ),
    sa.ForeignKeyConstraint(['inspector_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('return_inspections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('return_auth_id', sa.UUID(), nullable=False),
    sa.Column('inspector_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'accepted', 'rejected', name='inspection_status'), nullable=False),
    sa.Column('condition', sa.Enum('new', 'used', 'damaged', 'expired', name='return_condition'), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['inspector_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['return_auth_id'], ['return_authorizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_packages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shipment_id', sa.UUID(), nullable=False),
    sa.Column('weight', sa.String(length=500), nullable=False),
    sa.Column('length', sa.String(length=500), nullable=False),
    sa.Column('width', sa.String(length=500), nullable=False),
    sa.Column('height', sa.String(length=500), nullable=False),
    sa.Column('value', sa.String(length=500), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=False),
    sa.Column('requires_signature', sa.Boolean(), nullable=False),
    sa.Column('is_hazardous', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_tracking',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shipment_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CREATED', 'PICKUP', 'IN_TRANSIT', 'OUT_FOR_DELIVERY', 'DELIVERED', 'EXCEPTION', 'UNKNOWN', name='trackingstatus'), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tracking_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shipment_tracking')
    op.drop_table('shipment_packages')
    op.drop_table('return_inspections')
    op.drop_table('quality_checks')
    op.drop_table('picking_lists')
    op.drop_table('shipping_addresses')
    op.drop_table('shipments')
    op.drop_table('return_authorizations')
    op.drop_table('order_status_history')
    op.drop_table('ivr_status_history')
    op.drop_table('ivr_session_items')
    op.drop_table('ivr_reviews')
    op.drop_table('ivr_escalations')
    op.drop_table('ivr_documents')
    op.drop_table('ivr_approvals')
    op.drop_table('fulfillment_orders')
    op.drop_table('secondary_insurance')
    op.drop_table('phi_access_logs')
    op.drop_table('patient_documents')
    op.drop_table('orders')
    op.drop_table('ivr_sessions')
    op.drop_table('ivr_requests')
    op.drop_table('provider_relationships')
    op.drop_table('provider_credentials')
    op.drop_table('patients')
    op.drop_table('sensitive_data')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_providers_npi'), table_name='providers')
    op.drop_index(op.f('ix_providers_name'), table_name='providers')
    op.drop_table('providers')
    op.drop_table('compliance_checks')
    op.drop_table('audit_reports')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('stock_levels')
    op.drop_table('inventory_transactions')
    op.drop_table('warehouse_locations')
    op.drop_table('roles')
    op.drop_table('facilities')
    op.drop_table('products')
    op.drop_table('permissions')
    op.drop_table('organizations')
    op.drop_table('items')
    # ### end Alembic commands ### 